trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- script: echo K8S Terraform Azure!
  displayName: 'Run a one-line script'

- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'azure_rsa.pub'

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
  inputs:
    terraformVersion: '1.5.7'

- task: TerraformCLI@2
  displayName: 'terraform init'
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
    backendType: 'azurerm'
    backendServiceArm: 'azure-resources-manager-service-connection'
    backendAzureRmSubscriptionId: 'b12e66be-f455-4c9a-bcff-461973906d6d'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'terraform-backend-rg'
    backendAzureRmResourceGroupLocation: 'uksouth'
    backendAzureRmStorageAccountName: 'storageaccounthozturk'
    backendAzureRmContainerName: 'storageaccounthozturkcontainer'
    backendAzureRmKey: 'kubernetes-dev.tfstate'
    allowTelemetryCollection: true

# - task: TerraformCLI@2
#   displayName: "terraform apply"
#   inputs:
#     command: 'apply'
#     workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
#     environmentServiceName: 'azure-resource-connection'
#     commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publicKey.secureFilePath)'
#     allowTelemetryCollection: true
